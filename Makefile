# Those variables are for testing
CMD =
UVCMD = uv run
PIPELINE_PROW=pipeline-prow.yaml
PIPELINE_EMBED_PROW=hack/pipeline-embedded-prow.yaml
GH_REPO_OWNER = chmouel
GH_REPO_NAME = scratchmyback
GH_PR_NUM = 345
GH_PR_SENDER = chmouel
PASS_TOKEN = github/chmouel-token
PRURL = https://github.com/$(GH_REPO_OWNER)/$(GH_REPO_NAME)/pull/$(GH_PR_NUM)
CONTAINER_IMAGE=ghcr.io/openshift-pipelines/pipelines-as-code-prow:nightly

generate:
	@echo "Generating $(PIPELINE_PROW) ðŸš¿" && \
		echo "####### Do not edit this file use make generate" > $(PIPELINE_PROW) && \
		$(UVCMD) ./hack/tekton-task-embed-script.py --using-image=$(CONTAINER_IMAGE) ./prow/base.yaml >> $(PIPELINE_PROW)

	@echo "Generating embedded $(PIPELINE_EMBED_PROW) ðŸš¿" && \
		echo "####### Do not edit this file use make generate" > $(PIPELINE_EMBED_PROW) && \
		echo "####### You probably want to use ../pipeline-prow.yaml instead, this is mostly for dev" >> $(PIPELINE_EMBED_PROW) && \
		$(UVCMD) ./hack/tekton-task-embed-script.py ./prow/base.yaml >> $(PIPELINE_EMBED_PROW)

test:
	@uvx --with=requests --with=pytest-cov pytest -v prow --cov=prow --cov-report=term-missing

directtest:
	@ [[ -n "$(CMD)" ]] || (echo "Please specify a command to run as argument: like make test CMD=/lgtm" && exit 1)
	@env GH_PR_NUM=$(GH_PR_NUM) GH_REPO_NAME=$(GH_REPO_NAME) GH_REPO_OWNER=$(GH_REPO_OWNER) \
		GH_PR_SENDER=$(GH_PR_SENDER) \
		PAC_TRIGGER_COMMENT="$(CMD)" GITHUB_TOKEN=`pass show $(PASS_TOKEN)` \
		./prow/prow.py

open_pr:
	@if type -p xdg-open; then xdg-open $(PRURL); elif type -p open ;then open $(PRURL);fi

check:
	@tmpfile=`mktemp /tmp/check-XXXXXX`; tmpfile2=`mktemp /tmp/check-XXXXX` ; \
		make -s generate PIPELINE_PROW=$${tmpfile} PIPELINE_EMBED_PROW=$${tmpfile2} && \
		if ! cmp -s $(PIPELINE_PROW) $$tmpfile; then \
		echo "Changes is needed in $(PIPELINE_PROW): make sure to modify the prun in prow/ and run make generate before pushing"; \
			diff --color=always -u $(PIPELINE_PROW) $$tmpfile; \
			rm -f $$tmpfile; \
			exit 1; \
		fi ; \
		if ! cmp -s $(PIPELINE_EMBED_PROW) $$tmpfile2; then \
		echo "Changes is needed in $(PIPELINE_EMBED_PROW): make sure to modify the prun in prow/ and run make generate before pushing"; \
			diff --color=always -u $(PIPELINE_EMBED_PROW) $$tmpfile2; \
			rm -f $$tmpfile2; \
			exit 1; \
		fi ; \
		rm -f $$tmpfile $$tmpfile2;
